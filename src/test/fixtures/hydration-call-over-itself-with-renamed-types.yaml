---
name: hydration call over itself with renamed types
query: |-
  query {
    testing {
      movies {
        id
        name
        characters {
          id
          name
        }
        ...F1
      }
    }
  }

  fragment F1 on TestingCharacter {
    name
  }
services:
  testing: |
    schema {
      query: Query
    }

    type Character {
      id: ID!
      name: String
    }

    type Movie {
      characterIds: [ID]
      id: ID!
      name: String
    }

    type Query {
      characters(ids: [ID!]!): [Character]
      testing: Testing
    }

    type Testing {
      movies: [Movie]
    }
ndsls:
  testing: |-
    service testing {
        type Query {
            testing: Testing
        }
        type Testing {
            movies: [TestingMovie]
        }
        type TestingCharacter => renamed from Character  {
            id: ID!
            name: String
        }
        type TestingMovie => renamed from Movie {
            id: ID!
            name: String
            characters: [TestingCharacter] => hydrated from testing.characters(ids: $source.characterIds) object identified by id, batch size  3
        }
    }
schema: |-
  schema {
    query: Query
  }

  type Query {
    testing: Testing
  }

  type Testing {
    movies: [TestingMovie]
  }

  type TestingCharacter @renamed(from: "Character") {
    id: ID!
    name: String
  }

  type TestingMovie @renamed(from: "Movie") {
    characterIds: [ID] @omitted
    characters: [TestingCharacter] @hydrated(from: ["characters"] arguments: [{name: "ids" valueFromField: ["characterIds"]}] objectId: "id" batchSize: "3")
    id: ID!
    name: String
  }
underlyingQueries:
  call-0: |-
    query nadel_2_testing {
      characters(ids: ["C1", "C2", "C1"]) {
        id
        name
        object_identifier__UUID: id
      }
    }
  call-2: |-
    query nadel_2_testing {
      testing {
        movies {
          id
          name
          characterIds
          ...F1
        }
      }
    }

    fragment F1 on Character {
      name
    }
  call-1: |-
    query nadel_2_testing {
      characters(ids: ["C2", "C3"]) {
        id
        name
        object_identifier__UUID: id
      }
    }
underlyingResults:
  call-0: |-
    {
      "errors" : [ ],
      "data" : {
        "testing" : {
          "movies" : [
            {
              "id" : "M1",
              "name" : "Movie 1",
              "characterIds" : [
                "C1",
                "C2"
              ]
            },
            {
              "id" : "M2",
              "name" : "Movie 2",
              "characterIds" : [
                "C1",
                "C2",
                "C3"
              ]
            }
          ]
        }
      },
      "extensions" : { }
    }
  call-2: |-
    {
      "errors" : [ ],
      "data" : {
        "characters" : [
          {
            "id" : "C2",
            "name" : "Leia",
            "object_identifier__UUID" : "C2"
          },
          {
            "id" : "C3",
            "name" : "Anakin",
            "object_identifier__UUID" : "C3"
          }
        ]
      },
      "extensions" : { }
    }
  call-1: |-
    {
      "errors" : [ ],
      "data" : {
        "characters" : [
          {
            "id" : "C1",
            "name" : "Luke",
            "object_identifier__UUID" : "C1"
          },
          {
            "id" : "C2",
            "name" : "Leia",
            "object_identifier__UUID" : "C2"
          },
          {
            "id" : "C1",
            "name" : "Luke",
            "object_identifier__UUID" : "C1"
          }
        ]
      },
      "extensions" : { }
    }
response: |-
  {
    "data" : {
      "testing" : {
        "movies" : [
          {
            "id" : "M1",
            "name" : "Movie 1",
            "characters" : [
              {
                "id" : "C1",
                "name" : "Luke"
              },
              {
                "id" : "C2",
                "name" : "Leia"
              }
            ]
          },
          {
            "id" : "M2",
            "name" : "Movie 2",
            "characters" : [
              {
                "id" : "C1",
                "name" : "Luke"
              },
              {
                "id" : "C2",
                "name" : "Leia"
              },
              {
                "id" : "C3",
                "name" : "Anakin"
              }
            ]
          }
        ]
      }
    },
    "extensions" : { }
  }
