---
name: hydration call forwards error
query: |-
  query {
    foo {
      bar {
        name
      }
    }
  }
services:
  service2: |
    schema {
      query: Query
    }

    type Bar {
      id: ID
      name: String
    }

    type Query {
      barById(id: ID): Bar
    }
  service1: |
    schema {
      query: Query
    }

    type Foo {
      barId: ID
      id: ID
    }

    type Query {
      foo: Foo
    }
ndsls:
  service2: |-
    service service2 {
        type Query {
            barById(id: ID): Bar
        }
        type Bar {
            id: ID
            name: String
        }
    }
  service1: |-
    service service1 {
        type Query {
            foo: Foo
        }
        type Foo {
            id: ID
            bar: Bar => hydrated from service2.barById(id: $source.barId)
        }
    }
schema: |-
  schema {
    query: Query
  }

  type Bar {
    id: ID
    name: String
  }

  type Foo {
    barId: ID @omitted
    bar: Bar @hydrated(from: ["barById"] arguments: [{name: "id" valueFromField: ["barId"]}] objectId: "id")
    id: ID
  }

  type Query {
    barById(id: ID): Bar
    foo: Foo
  }
underlyingQueries:
  call-0: |-
    query nadel_2_service2 {
      barById(id: "barId1") {
        name
      }
    }
  call-1: |-
    query nadel_2_service1 {
      foo {
        barId
      }
    }
underlyingResults:
  call-0: |-
    {
      "errors" : [ ],
      "data" : {
        "foo" : {
          "barId" : "barId1"
        }
      },
      "extensions" : { }
    }
  call-1: |-
    {
      "errors" : [
        {
          "message" : "Some error occurred"
        }
      ],
      "data" : null,
      "extensions" : { }
    }
response: |-
  {
    "errors" : [
      {
        "message" : "Some error occurred",
        "locations" : [ ],
        "extensions" : {
          "classification" : "DataFetchingException"
        }
      }
    ],
    "data" : {
      "foo" : {
        "bar" : null
      }
    },
    "extensions" : { }
  }
