---
name: two top level fields with a fragment
query: |-
  fragment I on Issue {
    id
  }

  fragment U on User {
    id
    name
  }

  query {
    issues {
      ...I
    }
    user {
      ...U
    }
  }
services:
  UserService: |
    schema {
      query: Query
    }

    type Query {
      user: User
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    schema {
      query: Query
    }

    type Issue {
      authorId: ID
      id: ID
    }

    type Query {
      issues: [Issue]
    }
ndsls:
  UserService: |-
    service UserService {
        type Query {
            user: User
        }
        type User {
            id: ID
            name: String
        }
    }
  Issues: |-
    service Issues {
        type Query {
            issues: [Issue]
        }
        type Issue {
            id: ID
        }
    }
schema: |
  schema {
    query: Query
  }

  type Issue {
    id: ID
  }

  type Query {
    issues: [Issue]
    user: User
  }

  type User {
    id: ID
    name: String
  }
underlyingQueries:
  call-0: |-
    query nadel_2_UserService {
      user {
        ...U
      }
    }

    fragment U on User {
      id
      name
    }
  call-1: |-
    query nadel_2_Issues {
      issues {
        ...I
      }
    }

    fragment I on Issue {
      id
    }
underlyingResults:
  call-0: |-
    {
      "errors" : [ ],
      "data" : {
        "issues" : [
          {
            "id" : "ISSUE-1"
          },
          {
            "id" : "ISSUE-2"
          }
        ]
      },
      "extensions" : { }
    }
  call-1: |-
    {
      "errors" : [ ],
      "data" : {
        "user" : {
          "id" : "USER-1",
          "name" : "User 1"
        }
      },
      "extensions" : { }
    }
response: |-
  {
    "data" : {
      "issues" : [
        {
          "id" : "ISSUE-1"
        },
        {
          "id" : "ISSUE-2"
        }
      ],
      "user" : {
        "id" : "USER-1",
        "name" : "User 1"
      }
    },
    "extensions" : { }
  }
